user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/error_log info;

events {
        worker_connections 1024;
	use epoll;
}

rtmp {
        server {
	        listen 1935; #listen
		chunk_size 4096;

                #application reencode {
		#application dispenser1_live {
		#       live on;

                #       exec ffmpeg -i rtmp://localhost/dispenser1_live/dispenser128
		#               -c:a copy  -c:v libopenh264 -vf "drawtext=fontfile=/usr/share/fonts/liberation-fonts/LiberationSans-Regular.ttf: text='%{localtime\:%d.%m.%Y\ %H.%M.%S}': x=(w-tw)/2: y=h-(2*lh): fontcolor=white: box=1: boxcolor=0x00000000@1: boxborderw=2: fontsize=30" -b:v 6000k -crf 15 -f flv rtmp://localhost/hls_live/dispenser128;
		        #exec ffmpeg -i rtmp://localhost/dispenser1_live/dispenser128 -c:a copy  -c:v libopenh264 -b:v 6000k -crf 15 -f flv rtmp://localhost/hls_live/dispenser128;
			#       exec ffmpeg -i rtmp://localhost/src/$name
		#               -c:a aac -b:a 32k -c:v libx264 -b:v 128K -f flv rtmp://localhost/hls/$name_low
		#               -c:a aac -b:a 64k -c:v libx264 -b:v 256k -f flv rtmp://localhost/hls/$name_mid
		#               -c:a aac -b:a 128k -c:v libx264 -b:v 512K -f flv rtmp://localhost/hls/$name_hi;
		#}

                application dispenser1_live {
		#application hls_live {
		        live on;

                        #to pull already h264
			#pull rtmp://server.com:4567/dir/to/channel2 live=1;
			#pull rtmp://10.16.64.128/dispenser1_live live=1;

                        record all;
			record_path /var/www/streaming/rec; #will be .flv suffix
			record_unique on;#add timestamp to filename
			record_append on;

                        hls on;
			hls_path /var/www/streaming/hls/;
			#hls_nested on; #if nested! =subdirectories for each stream
			hls_fragment 3; #3 second fragment
			hls_playlist_length 43200; #60 second playlist
			hls_continuous on; #keep old fragments and sequence numbers

                        # disable consuming the stream from nginx as rtmp
			deny play all;
			}
		}
}

http {
        #Streaming:
	sendfile off;
	aio on;
	directio 512;

        include /etc/nginx/mime.types.nginx;
	types_hash_max_size 4096;
	default_type application/octet-stream;

        log_format main
	        '$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

        client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;

        connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;

        gzip off;

        output_buffers 1 32k;
	postpone_output 1460;

        #sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

        keepalive_timeout 75 20;

        ignore_invalid_headers on;

        index index.html;

        #Streaming:
	server {
	        listen 8080;
		server_name nfs;

                #root /var/www/localhost/htdocs;
		access_log /var/log/nginx/streaming.access_log main;
		error_log /var/log/nginx/streaming.error_log info;

                location /hls {
		        # Disable cache
			add_header Cache-Control no-cache;

                        # CORS setup
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length';

                        # allow CORS preflight requests
			if ($request_method = 'OPTIONS') {
			        add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
				}

                        types {
			        application/dash+xml mpd;
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
				}

                        root /var/www/streaming/;
			}
		root /var/www/streaming/player/;
		}

        #Multisite:
	#include /etc/nginx/conf.d/*.conf;

        # SSL example
	#server {
	#       listen 127.0.0.1:443;
	#       server_name localhost;

        #       ssl on;
	#       ssl_certificate /etc/ssl/nginx/nginx.pem;
	#       ssl_certificate_key /etc/ssl/nginx/nginx.key;

        #       access_log /var/log/nginx/localhost.ssl_access_log main;
	#       error_log /var/log/nginx/localhost.ssl_error_log info;

        #       root /var/www/localhost/htdocs;
	#}
}
